
/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */


/* THIS FILE WAS GENERATED!
 *
 * This file was generated automatically. You may or may not want to
 * edit it directly.
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/rgb.h>
#include <dt-bindings/zmk/backlight.h>

/ {
  behaviors {
    #include "macros.dtsi"
    #include "version.dtsi"

    hm: homerow_mods {
        compatible = "zmk,behavior-hold-tap";
        label = "HOMEROW_MODS";
        #binding-cells = <2>;
        tapping-term-ms = <200>;
        quick_tap_ms = <175>;
        flavor = "tap-preferred";
        bindings = <&kp>, <&kp>;
    };
  };

    keymap {
        compatible = "zmk,keymap";


        default_layer {
            bindings = <
        &kp GRAVE  &mt LA(N1) N1       &mt LA(N2) N2   &mt LA(N3) N3       &mt LA(N4) N4  &mt LA(N5) N5                &none                                                                                      &none   &kp N6               &kp N7          &kp N8               &kp N9    &mt LA(N0) N0            &kp BACKSPACE
          &kp TAB          &kp Q               &kp W           &kp E               &kp R        &lt 5 T                &none                                                                                      &none  &lt 5 Y                &kp U           &kp I                &kp O            &kp P                 &kp BSLH
 &mt LCTRL ESCAPE        &lt 2 A  &mt LEFT_CONTROL S  &mt LEFT_ALT D  &mt LEFT_COMMAND F        &lt 2 G                &none                   &kp LCTRL  &kp LALT                   &kp LGUI      &kp RCTRL      &none  &lt 3 H  &mt RIGHT_COMMAND J  &mt LEFT_ALT K  &mt RIGHT_CONTROL L  &lt 4 SEMICOLON  &mt RIGHT_CONTROL ENTER
        &kp LSHFT          &kp Z               &kp X           &kp C               &kp V          &kp B                                                   &kp HOME                  &kp PG_UP                              &kp N                &kp M       &kp COMMA              &kp DOT         &kp FSLH                &kp RSHFT
            &none          &none               &none           &none               &none                           &kp SPACE  &mt LEFT_COMMAND LG(SPACE)   &kp END                  &kp PG_DN  &kp BACKSPACE  &kp SPACE                         &none           &none                &none            &none                    &none
            >;
        };

        layer_mod {
            bindings = <
  &none  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4                  &none                                                                          &trans   &none       &none       &none   &none   &none   &none
  &none         &none         &none         &none         &none         &none            &bootloader                                                                     &bootloader   &none       &none       &none   &none   &none   &none
  &none         &none         &none         &none         &none         &none                  &none   &none   &none                  &bt BT_CLR       &none  &rgb_ug RGB_MEFS_CMD 5   &none       &none       &none   &none   &none   &none
  &none         &none         &none         &none    &macro_ver         &none                                  &none                       &none                                       &none       &none       &none   &none   &none   &none
  &none         &none         &none         &none         &none                                &none   &none   &none                       &none  &bl BL_TOG         &rgb_ug RGB_TOG          &bl BL_INC  &bl BL_DEC   &none   &none   &none
            >;
        };

        layer_RMOD {
            bindings = <
 &trans  &trans  &trans  &trans  &trans  &trans                  &trans                                                            &trans                &trans                 &trans          &trans             &trans     &trans  &trans
 &trans  &trans  &trans  &trans  &trans  &trans                  &trans                                                            &trans  &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS       &kp MINUS   &kp SINGLE_QUOTE   &kp PLUS  &trans
 &trans  &trans  &trans  &trans  &trans  &trans                  &trans            &trans  &trans                  &trans  &trans  &trans        &kp LEFT_BRACE        &kp RIGHT_BRACE       &kp EQUAL  &kp DOUBLE_QUOTES  &kp COLON  &trans
 &trans  &trans  &trans  &trans  &trans  &trans                                            &trans                  &trans                      &kp LEFT_BRACKET      &kp RIGHT_BRACKET  &kp UNDERSCORE      &kp BACKSLASH  &kp SLASH  &trans
 &trans  &trans  &trans  &trans  &trans                    &kp LEFT_ALT  &kp LEFT_COMMAND  &trans                  &trans  &trans  &trans                                       &trans          &trans             &trans     &trans  &trans
            >;
        };

        layer_LMOD {
            bindings = <
 &trans     &trans             &trans          &trans                &trans                 &trans            &trans                                                                    &trans  &trans  &trans  &trans  &trans  &trans  &trans
 &trans   &kp PLUS   &kp SINGLE_QUOTE       &kp MINUS  &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS            &trans                                                                    &trans  &trans  &trans  &trans  &trans  &trans  &trans
 &trans  &kp COLON  &kp DOUBLE_QUOTES       &kp EQUAL        &kp LEFT_BRACE        &kp RIGHT_BRACE            &trans  &trans  &trans                  &trans             &trans         &trans  &trans  &trans  &trans  &trans  &trans  &trans
 &trans  &kp SLASH      &kp BACKSLASH  &kp UNDERSCORE      &kp LEFT_BRACKET      &kp RIGHT_BRACKET                            &trans                  &trans                                    &trans  &trans  &trans  &trans  &trans  &trans
 &trans     &trans             &trans          &trans                &trans                                   &trans  &trans  &trans                  &trans  &kp RIGHT_COMMAND  &kp RIGHT_ALT          &trans  &trans  &trans  &trans  &trans
            >;
        };

        layer_RECTANGLE {
            bindings = <
 &trans  &trans  &trans  &trans  &trans  &trans                   &trans                                                                                                  &trans                      &trans             &trans           &trans  &trans      &trans  &trans
 &trans  &trans  &trans  &trans  &trans  &trans                   &trans                                                                                                  &trans      &kp RC(RG(LEFT_ARROW))              &kp RA(RG(UP_ARROW))            &kp RA(RG(DOWN_ARROW))   &kp RC(RG(RIGHT_ARROW))      &trans  &trans
 &trans  &trans  &trans  &trans  &trans  &trans                   &trans         &trans  &trans                  &trans                      &trans                       &trans      &kp RA(RC(LEFT_ARROW))              &kp RA(RG(LEFT_ARROW))            &kp RA(RG(RIGHT_ARROW))   &kp RA(RC(RIGHT_ARROW))      &trans  &trans
 &trans  &trans  &trans  &trans  &trans  &trans                                          &trans                  &trans                                                           &kp RC(RS(RG(LEFT_ARROW)))  &kp C_VOLUME_DOWN  &kp C_VOLUME_UP   &kp RC(RG(RS(RIGHT_ARROW)))  &kp C_MUTE  &trans
 &trans  &trans  &trans  &trans  &trans                    &kp LA(LG(F))  &kp LA(LG(C))  &trans                  &trans  &kp LA(RC(RG(LEFT_ARROW)))  &kp RA(RC(RG(RIGHT_ARROW)))                                         &trans           &trans  &trans      &trans  &trans
            >;
        };

        layer_ARROWS {
            bindings = <
 &trans  &trans          &trans        &trans          &trans           &trans                  &trans                                                                              &trans          &trans          &trans        &trans           &trans  &trans  &trans
 &trans  &trans          &trans   &kp PAGE_UP   &kp PAGE_DOWN           &trans                  &trans                                                                              &trans   &kp PAGE_DOWN     &kp PAGE_UP        &trans           &trans  &trans  &trans
 &trans  &trans  &kp LEFT_ARROW  &kp UP_ARROW  &kp DOWN_ARROW  &kp RIGHT_ARROW                  &trans            &trans  &trans                  &trans             &trans         &trans  &kp LEFT_ARROW  &kp DOWN_ARROW  &kp UP_ARROW  &kp RIGHT_ARROW  &trans  &trans
 &trans  &trans          &trans      &kp HOME         &kp END           &trans                                            &trans                  &trans                                            &trans         &kp END      &kp HOME           &trans  &trans  &trans
 &trans  &trans          &trans        &trans          &trans                             &kp LEFT_ALT  &kp LEFT_COMMAND  &trans                  &trans  &kp RIGHT_COMMAND  &kp RIGHT_ALT                          &trans        &trans           &trans  &trans  &trans
            >;
        };

    };
};
